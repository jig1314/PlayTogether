@inherits ChangePasswordBase
@using BlazorStrap.Extensions.FluentValidation
@using PlayTogether.Client.ViewModels

@if (!SubmittingData)
{
    <BSRow>
        <BSCol Class="col-md-6">
            <BSForm Model="@ChangePasswordViewModel" OnValidSubmit="UpdatePassword" ValidateOnInit="false">
                @if (!string.IsNullOrWhiteSpace(ErrorMessage))
                {
                    <BSFormGroup>
                        <BSAlert Color="Color.Danger">
                            @ErrorMessage
                        </BSAlert>
                    </BSFormGroup>
                }
                <BSFormGroup>
                    <h2>Change Password</h2>
                    <hr />
                </BSFormGroup>
                <FluentValidator TValidator="ChangePasswordValidator" />
                <BSFormGroup>
                    <BSLabel For="@ChangePasswordViewModel.OldPassword">Current Password</BSLabel>
                    <BSInput InputType="InputType.Password" @bind-Value="@ChangePasswordViewModel.OldPassword" ValidateOnInput="true" />
                    <BSFormFeedback For="@(() => ChangePasswordViewModel.OldPassword)" />
                </BSFormGroup>
                <BSFormGroup>
                    <BSLabel For="@ChangePasswordViewModel.NewPassword">New Password</BSLabel>
                    <BSInput InputType="InputType.Password" @bind-Value="@ChangePasswordViewModel.NewPassword" />
                    <BSFormFeedback For="@(() => ChangePasswordViewModel.NewPassword)" />
                    <small class="form-text text-muted">Password must be between 6 and 100 characters long.</small>
                    <small class="form-text text-muted">Password must contain an uppercase and lowercase letter, a number and a special character.</small>
                </BSFormGroup>
                <BSFormGroup>
                    <BSLabel For="@ChangePasswordViewModel.ConfirmPassword">Confirm New Password</BSLabel>
                    <BSInput InputType="InputType.Password" @bind-Value="@ChangePasswordViewModel.ConfirmPassword" ValidateOnChange="true" />
                    <BSFormFeedback For="@(() => ChangePasswordViewModel.ConfirmPassword)" />
                </BSFormGroup>
                <BSFormGroup>
                    <BSButton ButtonType="ButtonType.Submit" Class="btn btn-info btn-block btn-primary">Update password</BSButton>
                </BSFormGroup>
            </BSForm>
        </BSCol>
    </BSRow>
}
else
{
    <div class="loading-bar"></div>
}