@page "/register/"
@page "/register/{returnUrl}"
@inherits RegisterBase
@using BlazorStrap.Extensions.FluentValidation
@using PlayTogether.Client.ViewModels

@if (RegisterViewModel != null && Genders != null && Countries != null)
{
    <BSContainer>
        <BSRow>
            <div class="panel panel-primary">
                <div class="panel-body">
                    <BSForm Model="@RegisterViewModel" OnValidSubmit="RegisterUser" ValidateOnInit="false">
                        @if (!string.IsNullOrWhiteSpace(ErrorMessage))
                        {
                            <BSFormGroup>
                                <BSAlert Color="Color.Danger">
                                    @ErrorMessage
                                </BSAlert>
                            </BSFormGroup>
                        }
                        <BSFormGroup>
                            <h2>Create Account</h2>
                        </BSFormGroup>
                        <div class="row">
                            <div class="col-sm-5">
                                <FluentValidator TValidator="RegisterValidator" />
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.FirstName">First Name</BSLabel>
                                    <BSInput InputType="InputType.Text" @bind-Value="@RegisterViewModel.FirstName" />
                                    <BSFormFeedback For="@(() => RegisterViewModel.FirstName)" />
                                </BSFormGroup>
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.LastName">Last Name</BSLabel>
                                    <BSInput InputType="InputType.Text" @bind-Value="@RegisterViewModel.LastName" />
                                    <BSFormFeedback For="@(() => RegisterViewModel.LastName)" />
                                </BSFormGroup>
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.GenderId">Gender</BSLabel>
                                    <BSInput InputType="InputType.Select" @bind-Value="@RegisterViewModel.GenderId" ValidateOnInput="true">
                                        <option value="">Select...</option>
                                        @if (Genders != null)
                                            {
                                            @foreach (var gender in Genders)
                                                {
                                                <option value="@gender.Id">@gender.Value</option>
                                                }
                                            }
                                    </BSInput>
                                    <BSFormFeedback For="@(() => RegisterViewModel.GenderId)" />
                                </BSFormGroup>
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.DateOfBirth">Date of Birth</BSLabel>
                                    <BSInput InputType="InputType.Date" @bind-Value="@RegisterViewModel.DateOfBirth" />
                                    <BSFormFeedback For="@(() => RegisterViewModel.DateOfBirth)" />
                                </BSFormGroup>
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.CountryOfResidenceId">Country of Residence</BSLabel>
                                    <BSInput InputType="InputType.Select" @bind-Value="@RegisterViewModel.CountryOfResidenceId" ValidateOnInput="true">
                                        <option value="">Select...</option>
                                        @if (Countries != null)
                                            {
                                            @foreach (var country in Countries)
                                                {
                                                <option value="@country.Id">@country.Name</option>
                                                }
                                            }
                                    </BSInput>
                                    <BSFormFeedback For="@(() => RegisterViewModel.CountryOfResidenceId)" />
                                </BSFormGroup>
                            </div>
                            <div class="col-sm-2"></div>
                            <div class="col-sm-5">
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.Email">Email Address</BSLabel>
                                    <BSInput InputType="InputType.Email" @bind-Value="@RegisterViewModel.Email" />
                                    <BSFormFeedback For="@(() => RegisterViewModel.Email)" />
                                </BSFormGroup>
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.UserName">Username</BSLabel>
                                    <BSInput InputType="InputType.Text" @bind-Value="@RegisterViewModel.UserName" ValidateOnInput="true" />
                                    <BSFormFeedback For="@(() => RegisterViewModel.UserName)" />
                                </BSFormGroup>
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.Password">Password</BSLabel>
                                    <BSInput InputType="InputType.Password" @bind-Value="@RegisterViewModel.Password" ValidateOnInput="true" />
                                    <BSFormFeedback For="@(() => RegisterViewModel.Password)" />
                                </BSFormGroup>
                                <BSFormGroup>
                                    <BSLabel For="@RegisterViewModel.ConfirmPassword">Confirm password</BSLabel>
                                    <BSInput InputType="InputType.Password" @bind-Value="@RegisterViewModel.ConfirmPassword" ValidateOnInput="true" />
                                    <BSFormFeedback For="@(() => RegisterViewModel.ConfirmPassword)" />
                                </BSFormGroup>
                                <BSFormGroup>
                                    <BSButton ButtonType="ButtonType.Submit" Class="btn btn-info btn-block btn-primary">Create Account</BSButton>
                                </BSFormGroup>
                            </div>
                        </div>
                    </BSForm>
                </div>
            </div>
        </BSRow>
    </BSContainer>
}

<style>

    form {
        margin: 0px 10px;
    }

    h2 {
        margin-top: 2px;
        margin-bottom: 2px;
        text-align: center;
    }

    .panel-primary {
        width: 100%;
    }

    .divider {
        text-align: center;
        margin-top: 20px;
        margin-bottom: 5px;
    }

        .divider hr {
            margin: 7px 0px;
            width: 35%;
        }

    .left {
        float: left;
    }

    .right {
        float: right;
    }
</style>
