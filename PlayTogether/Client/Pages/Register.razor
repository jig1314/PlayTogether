@page "/register/"
@page "/register/{returnUrl}"
@inherits RegisterBase
@using BlazorStrap.Extensions.FluentValidation
@using PlayTogether.Client.ViewModels

@if (RegisterViewModel != null && Genders != null && Countries != null)
{
    <BSContainer>
        <BSRow>
            <div class="panel panel-primary">
                <div class="panel-body">
                    <BSForm Model="@RegisterViewModel" OnValidSubmit="RegisterUser" ValidateOnInit="false">
                        @if (!string.IsNullOrWhiteSpace(ErrorMessage))
                        {
                            <BSFormGroup>
                                <BSAlert Color="Color.Danger">
                                    @ErrorMessage
                                </BSAlert>
                            </BSFormGroup>
                        }
                        <BSFormGroup>
                            <h2 style="color: #EDFFEC;">Create Account</h2>
                        </BSFormGroup>
                        <FluentValidator TValidator="RegisterValidator" />
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.FirstName"><h6 style="color: #EDFFEC;">First Name</h6></BSLabel>
                            <BSInput id="firstNameText" InputType="InputType.Text" @bind-Value="@RegisterViewModel.FirstName" />
                            <BSFormFeedback For="@(() => RegisterViewModel.FirstName)" />
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.LastName"><h6 style="color: #EDFFEC;">Last Name</h6></BSLabel>
                            <BSInput id="lastNameText" InputType="InputType.Text" @bind-Value="@RegisterViewModel.LastName" />
                            <BSFormFeedback For="@(() => RegisterViewModel.LastName)" />
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.Email"><h6 style="color: #EDFFEC;">Email Address</h6></BSLabel>
                            <BSInput id="emailText" InputType="InputType.Email" @bind-Value="@RegisterViewModel.Email" />
                            <BSFormFeedback For="@(() => RegisterViewModel.Email)" />
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.UserName"><h6 style="color: #EDFFEC;">Username</h6></BSLabel>
                            <BSInput id="userNameText" InputType="InputType.Text" @bind-Value="@RegisterViewModel.UserName" />
                            <BSFormFeedback For="@(() => RegisterViewModel.UserName)" />
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.Password"><h6 style="color: #EDFFEC;">Password</h6></BSLabel>
                            <BSInput id="passwordText" InputType="InputType.Password" @bind-Value="@RegisterViewModel.Password" />
                            <BSFormFeedback For="@(() => RegisterViewModel.Password)" />
                            <small class="form-text text-muted">Password must be between 6 and 100 characters long.</small>
                            <small class="form-text text-muted">Password must contain an uppercase and lowercase letter, a number and a special character.</small>
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.ConfirmPassword"><h6 style="color: #EDFFEC;">Confirm password</h6></BSLabel>
                            <BSInput id="confirmPasswordText" InputType="InputType.Password" @bind-Value="@RegisterViewModel.ConfirmPassword" />
                            <BSFormFeedback For="@(() => RegisterViewModel.ConfirmPassword)" />
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.GenderId"><h6 style="color: #EDFFEC;">Gender</h6></BSLabel>
                            <BSInput id="genderDropdown" InputType="InputType.Select" @bind-Value="@RegisterViewModel.GenderId">
                                <option value="">Please select a Gender...</option>
                                @if (Genders != null)
                                {
                                    @foreach (var gender in Genders)
                                    {
                                        <option value="@gender.Id">@gender.Value</option>
                                    }
                                }
                            </BSInput>
                            <BSFormFeedback For="@(() => RegisterViewModel.GenderId)" />
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.CountryOfResidenceId"><h6 style="color: #EDFFEC;">Country of Residence</h6></BSLabel>
                            <BSInput id="countryOfResidenceDropdown" InputType="InputType.Select" @bind-Value="@RegisterViewModel.CountryOfResidenceId">
                                <option value="">Select a Country...</option>
                                @if (Countries != null)
                                {
                                    @foreach (var country in Countries)
                                    {
                                        <option value="@country.Id">@country.Name</option>
                                    }
                                }
                            </BSInput>
                            <BSFormFeedback For="@(() => RegisterViewModel.CountryOfResidenceId)" />
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSLabel For="@RegisterViewModel.DateOfBirth"><h6 style="color: #EDFFEC;">Date of Birth</h6></BSLabel>
                            <BSInput id="dateOfBirthDatePicker" InputType="InputType.Date" @bind-Value="@RegisterViewModel.DateOfBirth" />
                            <BSFormFeedback For="@(() => RegisterViewModel.DateOfBirth)" />
                        </BSFormGroup>
                        <BSFormGroup>
                            <BSButton id="submitButton" ButtonType="ButtonType.Submit" Class="btn btn-info btn-block btn-primary">Create your account</BSButton>
                        </BSFormGroup>
                    </BSForm>
                </div>
            </div>
        </BSRow>
    </BSContainer>
}

<style>

    form {
        margin: 0px 10px;
    }

    h2 {
        margin-top: 2px;
        margin-bottom: 2px;
        text-align: center;
    }

    .panel-primary {
        width: 100%;
    }

    .container {
        max-width: 450px;
    }

    .divider {
        text-align: center;
        margin-top: 20px;
        margin-bottom: 5px;
    }

        .divider hr {
            margin: 7px 0px;
            width: 35%;
        }

    .left {
        float: left;
    }

    .right {
        float: right;
    }
</style>
