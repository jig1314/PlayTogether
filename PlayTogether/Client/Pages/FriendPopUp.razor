@inherits FriendPopUpBase

@if (FriendUsers != null && ActiveReceivedFriendRequests != null)
{
    <BSTabGroup>
        <BSTabList>
            <BSTab @ref="@TabFriends" InitialSelection="true">
                <BSTabLabel>Friends</BSTabLabel>
                <BSTabContent>
                    <BSRow>
                        @if (FriendUsers?.Count > 0)
                        {
                            @foreach (var friend in FriendUsers.OrderBy(friend => friend.UserName))
                            {
                                <div class="col-md-12">
                                    <div class="row well well-white mini-profile-widget bootdey.com">
                                        <div class="col-md-3">
                                            <div class="image-container">
                                                <img src="alt-image.png" class="avatar img-responsive">
                                            </div>
                                        </div>
                                        <div class="col-md-9">
                                            <div style="text-align: left;" class="details">
                                                <h5><a href="profile/@friend.UserName">@friend.FirstName @friend.LastName</a></h5>
                                                <p class="text-muted" style="margin-bottom: unset;">@friend.UserName</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p style="margin-top: 5px; margin-left: 15px;">You have no friends...yet!</p>
                        }
                    </BSRow>
                </BSTabContent>
            </BSTab>
            <BSTab @ref="@TabFriendRequests">
                @if (ActiveReceivedFriendRequests?.Count - DeclinedFriendRequestsUserIds.Count - AcceptedFriendRequestsUserIds.Count > 0)
                {
                    <BSTabLabel>Friend Requests (@(ActiveReceivedFriendRequests.Count - DeclinedFriendRequestsUserIds.Count - AcceptedFriendRequestsUserIds.Count))</BSTabLabel>
                }
                else
                {
                    <BSTabLabel>Friend Requests</BSTabLabel>
                }
                <BSTabContent>
                    <BSRow>
                        @if (ActiveReceivedFriendRequests?.Count > 0)
                        {
                            @foreach (var friendRequest in ActiveReceivedFriendRequests.OrderBy(friendRequest => friendRequest.FromUser.UserName))
                            {
                                <div class="col-md-12">
                                    <div class="row well well-white mini-profile-widget bootdey.com">
                                        <div class="col-md-3">
                                            <div class="image-container">
                                                <img src="alt-image.png" class="avatar img-responsive">
                                            </div>
                                        </div>
                                        <div class="col-md-9">
                                            <div style="text-align: center;" class="details">
                                                <h5><a href="profile/@friendRequest.FromUser.UserName">@friendRequest.FromUser.FirstName @friendRequest.FromUser.LastName (@friendRequest.FromUser.UserName)</a></h5>
                                                <hr style="margin-bottom: unset;" />
                                                @if (AcceptedFriendRequestsUserIds.Contains(friendRequest.FromUserId))
                                                {
                                                    <BSButton ButtonType="ButtonType.Button" IsDisabled="true" Class="btn btn-primary mt-3 btn-rounded waves-effect w-md waves-light">Accepted <i class="fas fa-check"></i></BSButton>
                                                }
                                                else if (DeclinedFriendRequestsUserIds.Contains(friendRequest.FromUserId))
                                                {
                                                    <BSButton ButtonType="ButtonType.Button" IsDisabled="true" Class="btn mt-3 btn-rounded waves-effect w-md waves-light" Color="Color.Secondary">Declined <i class="fas fa-times"></i></BSButton>
                                                }
                                                else
                                                {
                                                    <BSButton ButtonType="ButtonType.Button" OnClick="@(() => AcceptFriendRequest(friendRequest.FromUser.UserId))" Class="btn btn-primary mt-3 btn-rounded waves-effect w-md waves-light">Accept <i class="fas fa-check"></i></BSButton>
                                                    <BSButton ButtonType="ButtonType.Button" OnClick="@(() => DeclineFriendRequest(friendRequest.FromUser.UserId))" Class="btn mt-3 btn-rounded waves-effect w-md waves-light" Color="Color.Secondary">Decline <i class="fas fa-times"></i></BSButton>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else if (ActiveReceivedFriendRequests?.Count == 0)
                        {
                            <p style="margin-top: 5px; margin-left: 15px;">No pending friend requests.</p>
                        }
                    </BSRow>
                </BSTabContent>
            </BSTab>
        </BSTabList>
        <BSTabSelectedContent />
    </BSTabGroup>
}
else
{
    <div class="loading-bar"></div>
}

<style>

    .card-box {
        padding: 20px;
        border: 1px solid #dee2e6;
        border-radius: 3px;
        margin-bottom: 30px;
        background-color: #fff;
    }

    .well {
        overflow: hidden;
        border: 1px solid #dee2e6;
        border-radius: 3px;
        padding: 15px;
        margin: 15px;
    }

        .well .well-heading .controls {
            position: absolute;
            top: 10px;
            right: 30px;
        }

        .well .well-body {
            margin-top: 20px;
            position: relative;
            z-index: 3;
        }

        .well .well-image {
            font-size: 90px;
            line-height: 90px;
            position: absolute;
            top: 20px;
            right: 30px;
            z-index: 1;
            color: rgba(0, 0, 0, 0.15);
            -webkit-transition: all 0.2s ease-in;
            -moz-transition: all 0.2s ease-in;
            -ms-transition: all 0.2s ease-in;
            -o-transition: all 0.2s ease-in;
            transition: all 0.2s ease-in;
        }

        .well.well-solid {
            color: white;
        }

        .well:hover .well-image {
            font-size: 60px;
        }

    .well-white {
        background-color: white;
        color: #454545;
    }

    .mini-profile-widget .image-container .avatar {
        width: 90px;
        height: 90px;
        display: block;
        margin: 0 auto;
        border-radius: 50%;
        background: white;
        padding: 4px;
        border: 1px solid #dddddd;
    }

    .thumb-lg {
        height: 88px;
        width: 88px;
    }

    .img-thumbnail {
        padding: .25rem;
        background-color: #fff;
        border: 1px solid #dee2e6;
        border-radius: .25rem;
        max-width: 100%;
        height: auto;
    }

    .btn-rounded {
        border-radius: 2em;
    }
</style>